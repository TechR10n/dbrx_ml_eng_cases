@startuml
'https://plantuml.com/sequence-diagram
left to right direction
skinparam linetype ortho
' autonumber

rectangle "identify email spam" as spam
rectangle "sort products in catalog" as product_catalog
rectangle "identify loans that will default" as loan_default
rectangle "Assign customers to customer clusters" as customer_clustering
rectangle sentiment_analysis
rectangle fraud_detection
rectangle customer_ad_targeting
rectangle churn_prediction
rectangle support_case_flagging
rectangle content_personalization
rectangle detect_manufacturing_defect
rectangle customer_segmentation
rectangle event_discovery
rectangle genomics
rectangle drug_efficacy

rectangle classification
rectangle regression
rectangle recommendation
rectangle imputation

rectangle Decision_Tree
rectangle Naive_Bayes
rectangle Logistic_Regression_w_threshold
rectangle support_vector_machine

spam --> classification
product_catalog --> classification
loan_default --> classification
customer_clustering --> classification
sentiment_analysis --> classification
fraud_detection --> classification
customer_ad_targeting --> classification
churn_prediction --> classification
support_case_flagging --> classification
content_personalization --> classification
detect_manufacturing_defect --> classification
customer_segmentation --> classification
event_discovery --> classification
genomics --> classification
drug_efficacy --> classification



classification --> Decision_Tree
classification --> Naive_Bayes
classification --> Logistic_Regression_w_threshold
classification --> support_vector_machine


rectangle stock_market_prediction
rectangle demand_forecasting
rectangle price_estimation
rectangle ad_bid_optimization
rectangle risk_management
rectangle asset_management
rectangle weather_forecasting
rectangle sports_prediction
rectangle predict_ad_word_value
rectangle p_of_loan_default
rectangle how_much_lift_from_ad_spend

rectangle linear_regression
rectangle logistic_regression


stock_market_prediction --> regression
demand_forecasting --> regression
price_estimation --> regression
ad_bid_optimization --> regression
risk_management --> regression
asset_management --> regression
weather_forecasting --> regression
sports_prediction --> regression
predict_ad_word_value --> regression
p_of_loan_default --> regression
how_much_lift_from_ad_spend --> regression

regression --> linear_regression
regression --> logistic_regression


'## Task 1
'### Read Data from Delta Table
'Use Spark to read data from the Delta table into a DataFrame.
'Task 2 Manage Data Permissions
'Establish controlled access to the Telco Delta table by granting specific permissions for essential actions.
'Grant permissions for specific actions (e.g., read, write) on the Delta table.

'## Task 3: Show Summary Statistics
'Compute and present key statistical metrics to gain a comprehensive understanding of the Telco dataset.
'- Utilize PySpark to compute and display summary statistics for the Telco dataset.
'+ Include key metrics such as mean, standard deviation, min, max, etc.

'Task 4: Use Data Profiler to Explore DataFrame
'Use the Data Profiler and Visualization Editor tools.
'
'Use the Data Profiler to explore the structure, data types, and basic statistics of the DataFrame.
'- Task 4.1.1: Identify columns with missing values and analyze the percentage of missing data for each column.
'- Task 4.1.2: Review the data types of each column to ensure they match expectations. Identify any columns that might need type conversion.
'- Use Visualization Editor to Check Outliers and Data Distributions:
'- Task 4.2.1: Create a bar chart to visualize the distribution of churned and non-churned customers.
'- Task 4.2.2: Generate a pie chart to visualize the distribution of different contract types.
'- Task 4.2.3: Create a scatter plot to explore the relationship between monthly charges and total charges.
'- Task 4.2.4: Visualize the count of customers for each payment method using a bar chart.
'- Task 4.2.5: Compare monthly charges for different contract types using a box plot.

'## Task 5
'### Drop the Column
'Remove a specific column, enhancing data cleanliness and focus.
'Identify the column that needs to be dropped. For example, let's say we want to drop the 'SeniorCitizen' column.
'Use the appropriate command or method to drop the identified column from the Telco dataset.
'Verify that the column has been successfully dropped by displaying the updated dataset.

' ## Task 7
' ### Read previous versions of the delta table
  'Demonstrate the ability to read data from a specific version of the Delta table.
  'Replace the timestamp in the code with the actual version or timestamp of interest.
' data_scientist --> bronze_table : read raw data from Bronze


rectangle historical_data
rectangle modeling {
    rectangle model_building
    rectangle model_evaluation
    rectangle model_optimization
}

rectangle prediction {
    rectangle new_data
    rectangle answers
}

historical_data --> modeling
modeling --> prediction
prediction --> modeling

prediction --> historical_data


@enduml