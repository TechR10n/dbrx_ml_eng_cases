@startuml

skinparam DefaultFontName Open Sans
allowmixing
left to right direction
skinparam rectangle {
    roundCorner<<Concept>> 25
}

' based on https://catalog.us-east-1.prod.workshops.aws/workshops/752fd04a-f7c3-49a0-a9a0-c9b5ed40061b/en-US/codepipeline-extend

' Uncomment the line below for "dark mode" styling
'!$AWS_DARK = true

!define AWSPuml https://raw.githubusercontent.com/awslabs/aws-icons-for-plantuml/v17.0/dist
!include AWSPuml/AWSCommon.puml
!include AWSPuml/ApplicationIntegration/SimpleNotificationService.puml
!include AWSPuml/Compute/EC2.puml
!include AWSPuml/DeveloperTools/CodeBuild.puml
!include AWSPuml/DeveloperTools/CodeCommit.puml
!include AWSPuml/DeveloperTools/CodeDeploy.puml
!include AWSPuml/DeveloperTools/CodePipeline.puml
!include AWSPuml/General/User.puml
!include AWSPuml/Storage/SimpleStorageService.puml

!define aws_local /Users/ryan/etc/aws-icons-for-plantuml-main/dist
!include aws_local/Analytics/Athena.puml
!include aws_local/Analytics/Redshift.puml



$AWSGroupColoring(CodePipelineGroup, $AWSColor(DeveloperTools))
!define CodePipelineGroup(g_alias, g_label="AWS CodePipeline") $AWSDefineGroup(g_alias, g_label, CodePipeline, CodePipelineGroup)

' Groups are rectangles with a custom style using stereotype - need to hide
hide stereotype
'skinparam linetype ortho
skinparam rectangle {
    BackgroundColor $AWS_BG_COLOR
    BorderColor transparent
}

' define custom procedure for AWS Service icon and two lines of text
!procedure $AWSIcon($service, $line1, $line2="")
rectangle "$AWSImg($service)\n$line1\n$line2"
!endprocedure

CodePipelineGroup(pipeline){
  $AWSIcon(CodeCommit, "AWS CodeCommit") as cc
  $AWSIcon(CodeBuild, "AWS CodeBuild") as cb
  $AWSIcon(SimpleStorageService, "Amazon S3", "(artifact store)") as s3
  cc -r-> cb
  cb -d-> s3

  $AWSIcon(CodeDeploy, "AWS CodeDeploy") as cd1
  $AWSIcon(EC2, "Amazon EC2", "(dev)") as ec2dev
  cb -r-> cd1
  cd1 -d-> ec2dev

  $AWSIcon(User, "Human", "Approval") as user
  cd1 -r-> user

  $AWSIcon(CodeDeploy, "AWS CodeDeploy") as cd2
  $AWSIcon(EC2, "Amazon EC2", "(prod)") as ec2prod
  user -r-> cd2
  cd2 -d-> ec2prod

  $AWSIcon(SimpleNotificationService, "SNS Notification") as sns
'  cd2 -r-> sns

  $AWSIcon(Athena, "Amazon Athena") as athena



}


'To change background color to elastic green
'skinparam cardBackgroundColor 00BFB3
database Redshift {
$AWSIcon(Redshift, "Redshift Stage") as redshift_stg {
    database schema_stg {
        entity table_stg
    }
}
}

card rtc_nonprod2
card rtc_nonprodqa2
card rtc_prod2
card rtc_services
card rtc_stage1
card rtc_stage2

actor "AD Group" as ad_group
card OKTA

card "AWS Redshift" {
    card Redshift_Cluster
    card Redshift_Database
    card Redshift_Schema
    card Redshift_Table
}

object data_science_use_case #rosybrown {
    use_case_name
}

class "Databricks Users" as Users {
    +first_name
    +last_name
    +email
    +group
    +cluster
    +volume
    detect_new_users()
    add_new_users(group, cluster, volume)
}



title
| Title: | Databricks Deployment to rtc_nonprod2 |
| As of  | %date("YYYY-MM-dd") |
| PlantUML Version | %version() |
end title

footer Notes: Workspace Admin operations will follow a different workflow

rectangle UnityCatalog

card Databricks_Account {
    card Databricks_Workspace {
        card Databricks_Cluster {
            card Databricks_Volume
        }
    }
    portin allow_okta
}

'box Data_Science_Ownership #lightgreen
actor "Data Scientist" as ds
collections "Exploratory\nData\nAnalysis" as eda
collections "Experiment" as exp
collections "Experiment\nRUN_ID" as run

actor "ML Engineer" as mle
collections "Machine\nLearning\nPipeline" as pipe
collections "Model\nPerformance\nDashboard" as dash
collections "Machine\nLearning\nPipeline" as pipe
collections "Model\nPerformance\nDashboard" as dash
queue "Create\nFeatures/Labels" as features

ad_group --> OKTA
OKTA --> allow_okta
allow_okta --> Databricks_Workspace

@enduml 